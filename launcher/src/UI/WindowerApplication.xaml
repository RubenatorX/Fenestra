<!--
Copyright Â© Windower Dev Team

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation files
(the "Software"),to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge,
publish, distribute, sublicense, and/or sell copies of the Software,
and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->
<Application x:Class="Windower.UI.WindowerApplication"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:com="clr-namespace:System.ComponentModel;assembly=PresentationFramework"
             xmlns:ui="clr-namespace:Windower.UI"
             xmlns:xtk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/windower;component/res/Branding.xaml"/>
                <ResourceDictionary Source="/windower;component/res/Strings.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Image x:Key="Icon" Source="/windower;component/res/Icon.ico"/>

            <SolidColorBrush x:Key="WindowerBranding" Color="{DynamicResource WindowerBrandingColor}"/>
            <SolidColorBrush x:Key="BaseLow" Color="#33000000"/>
            <SolidColorBrush x:Key="BaseMediumLow" Color="#66000000"/>
            <SolidColorBrush x:Key="BaseMedium" Color="#99000000"/>
            <SolidColorBrush x:Key="BaseMediumHigh" Color="#CC000000"/>
            <SolidColorBrush x:Key="AltMediumLow" Color="#66FFFFFF"/>
            <SolidColorBrush x:Key="AltMedium" Color="#99FFFFFF"/>
            <SolidColorBrush x:Key="ChromeAltLow" Color="#FF171717"/>
            <SolidColorBrush x:Key="ChromeMediumLow" Color="#FFF2F2F2"/>
            <SolidColorBrush x:Key="ChromeMedium" Color="#FFE6E6E6"/>
            <SolidColorBrush x:Key="ChromeHigh" Color="#FFCCCCCC"/>
            <SolidColorBrush x:Key="ChromeDisabledLow" Color="#FF7A7A7A"/>
            <SolidColorBrush x:Key="ChromeDisabledHigh" Color="#FFCCCCCC"/>
            <SolidColorBrush x:Key="ListLow" Color="#19000000"/>
            <SolidColorBrush x:Key="ListMedium" Color="#33000000"/>
            <SolidColorBrush x:Key="ListAccentLow" Color="{DynamicResource WindowerBrandingColor}" Opacity="0.4"/>
            <SolidColorBrush x:Key="ListAccentMedium" Color="{DynamicResource WindowerBrandingColor}" Opacity="0.6"/>
            <SolidColorBrush x:Key="BaseInfo" Color="#FF333399"/>
            <SolidColorBrush x:Key="BaseWarning" Color="#FFFFB900"/>
            <SolidColorBrush x:Key="BaseError" Color="#FF993333"/>

            <Style x:Key="IconLaunch" TargetType="{x:Type Control}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ContentControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path Data="M10.751953,0.81054699 L19.941406,10 L10.751953,19.189453 L9.8730469,18.310547 L17.558594,10.625 L0,10.625 L0,9.375 L17.558594,9.375 L9.8730469,1.6894531 z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" SnapsToDevicePixels="True"/>
                            </ContentControl>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IconAdd" TargetType="{x:Type Control}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ContentControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path Data="M5.625,0 L6.375,0 L6.375,5.625 L12,5.625 L12,6.375 L6.375,6.375 L6.375,12 L5.625,12 L5.625,6.375 L0,6.375 L0,5.625 L5.625,5.625 z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" SnapsToDevicePixels="True"/>
                            </ContentControl>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IconRemove" TargetType="{x:Type Control}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ContentControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path Data="M6.75,3.75 L7.5,3.75 L7.5,9.75 L6.75,9.75 z M5.25,3.75 L6,3.75 L6,9.75 L5.25,9.75 z M3.75,3.75 L4.5,3.75 L4.5,9.75 L3.75,9.75 z M2.25,2.25 L2.25,10.875 C2.25,10.976563 2.2871094,11.064453 2.3613281,11.138672 C2.4355469,11.212891 2.5234375,11.25 2.625,11.25 L8.625,11.25 C8.7265625,11.25 8.8144531,11.212891 8.8886719,11.138672 C8.9628906,11.064453 9,10.976563 9,10.875 L9,2.25 z M4.5,0.75 L4.5,1.5 L6.75,1.5 L6.75,0.75 z M4.5,0 L6.75,0 C6.8554683,0 6.9531245,0.01953125 7.0429688,0.05859375 C7.132812,0.09765625 7.2119136,0.15136719 7.2802734,0.21972656 C7.3486323,0.28808594 7.4023433,0.3671875 7.4414063,0.45703125 C7.4804683,0.546875 7.4999995,0.64453125 7.5,0.75 L7.5,1.5 L10.5,1.5 L10.5,2.25 L9.75,2.25 L9.75,10.875 C9.75,11.03125 9.7207031,11.177734 9.6621094,11.314453 C9.6035156,11.451172 9.5234375,11.570313 9.421875,11.671875 C9.3203125,11.773438 9.2011719,11.853516 9.0644531,11.912109 C8.9277344,11.970703 8.78125,12 8.625,12 L2.625,12 C2.46875,12 2.3222656,11.970703 2.1855469,11.912109 C2.0488281,11.853516 1.9296874,11.773438 1.828125,11.671875 C1.7265624,11.570313 1.6464843,11.451172 1.5878906,11.314453 C1.5292969,11.177734 1.5,11.03125 1.5,10.875 L1.5,2.25 L0.75,2.25 L0.75,1.5 L3.75,1.5 L3.75,0.75 C3.7499998,0.64453125 3.769531,0.546875 3.8085938,0.45703125 C3.847656,0.3671875 3.9013669,0.28808594 3.9697266,0.21972656 C4.0380859,0.15136719 4.1171875,0.09765625 4.2070313,0.05859375 C4.296875,0.01953125 4.3945313,0 4.5,0 z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" SnapsToDevicePixels="True"/>
                            </ContentControl>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IconEdit" TargetType="{x:Type Control}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ContentControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path Data="M1.5117188,9.0410156 L1.03125,10.96875 L2.9589844,10.488281 C2.9199219,10.308594 2.8564453,10.138672 2.7685547,9.9785156 C2.6806641,9.8183594 2.5742188,9.6757813 2.4492188,9.5507813 C2.3242188,9.4257813 2.1816406,9.3193359 2.0214844,9.2314453 C1.861328,9.1435547 1.6914061,9.0800781 1.5117188,9.0410156 z M8.25,2.0332031 L1.9101563,8.3671875 C2.3242188,8.5039063 2.6806641,8.7216797 2.9794922,9.0205078 C3.2783201,9.3193359 3.4960935,9.6757813 3.6328125,10.089844 L9.9667969,3.75 z M10.03125,0.75 C9.8828125,0.75 9.7529297,0.77050781 9.6416016,0.81152344 C9.5302734,0.85253906 9.4267578,0.90820313 9.3310547,0.97851563 C9.2353516,1.0488281 9.1445313,1.1289063 9.0585938,1.21875 C8.9726563,1.3085938 8.8808594,1.4023438 8.7832031,1.5 L10.5,3.2167969 C10.597656,3.1191406 10.691406,3.0273438 10.78125,2.9414063 C10.871094,2.8554688 10.951172,2.7646484 11.021484,2.6689453 C11.091797,2.5732422 11.147461,2.4697266 11.188477,2.3583984 C11.229492,2.2470703 11.25,2.1171875 11.25,1.96875 C11.25,1.8007813 11.217773,1.6435547 11.15332,1.4970703 C11.088867,1.3505859 11.000977,1.2216797 10.889648,1.1103516 C10.77832,0.99902344 10.649414,0.91113281 10.50293,0.84667969 C10.356445,0.78222656 10.199219,0.75 10.03125,0.75 z M10.037109,0 C10.306641,0 10.560547,0.051757813 10.798828,0.15527344 C11.037109,0.25878906 11.245117,0.39941406 11.422852,0.57714844 C11.600586,0.75488281 11.741211,0.96289063 11.844727,1.2011719 C11.948242,1.4394531 12,1.6933594 12,1.9628906 C12,2.2207031 11.951172,2.4707031 11.853516,2.7128906 C11.755859,2.9550781 11.613281,3.1699219 11.425781,3.3574219 L3.7089844,11.074219 L0,12 L0.92578125,8.2910156 L8.6425781,0.57421875 C8.8300781,0.38671875 9.0449219,0.24414063 9.2871094,0.14648438 C9.5292969,0.048828125 9.7792969,0 10.037109,0 z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" SnapsToDevicePixels="True"/>
                            </ContentControl>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IconEllipsis" TargetType="{x:Type Control}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ContentControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path Data="M16.916668,8.458334 C17.08659,8.458334 17.243923,8.4898014 17.388672,8.5527344 C17.533421,8.6156693 17.660862,8.7022038 17.770996,8.8123379 C17.88113,8.922472 17.967665,9.0499134 18.0306,9.1946621 C18.093533,9.3394108 18.125,9.4967461 18.125,9.666667 C18.125,9.8365898 18.093533,9.9939241 18.0306,10.138672 C17.967665,10.283421 17.88113,10.410862 17.770996,10.520996 C17.660862,10.631131 17.533421,10.717666 17.388672,10.7806 C17.243923,10.843534 17.08659,10.875 16.916668,10.875 C16.746746,10.875 16.589409,10.843534 16.444662,10.7806 C16.299911,10.717666 16.17247,10.631131 16.062338,10.520996 C15.952203,10.410862 15.865669,10.283421 15.802735,10.138672 C15.739801,9.9939241 15.708334,9.8365898 15.708334,9.666667 C15.708334,9.4967461 15.739801,9.3394108 15.802735,9.1946621 C15.865669,9.0499134 15.952203,8.922472 16.062338,8.8123379 C16.17247,8.7022038 16.299911,8.6156693 16.444662,8.5527344 C16.589409,8.4898014 16.746746,8.458334 16.916668,8.458334 z M9.666667,8.458334 C9.8365879,8.458334 9.9939232,8.4898014 10.138672,8.5527344 C10.283421,8.6156693 10.410862,8.7022038 10.520996,8.8123379 C10.63113,8.922472 10.717665,9.0499134 10.7806,9.1946621 C10.843533,9.3394108 10.875,9.4967461 10.875,9.666667 C10.875,9.8365898 10.843533,9.9939241 10.7806,10.138672 C10.717665,10.283421 10.63113,10.410862 10.520996,10.520996 C10.410862,10.631131 10.283421,10.717666 10.138672,10.7806 C9.9939232,10.843534 9.8365879,10.875 9.666667,10.875 C9.4967442,10.875 9.3394098,10.843534 9.1946621,10.7806 C9.0499134,10.717666 8.922472,10.631131 8.8123379,10.520996 C8.7022028,10.410862 8.6156683,10.283421 8.5527344,10.138672 C8.4898005,9.9939241 8.458334,9.8365898 8.458334,9.666667 C8.458334,9.4967461 8.4898005,9.3394108 8.5527344,9.1946621 C8.6156683,9.0499134 8.7022028,8.922472 8.8123379,8.8123379 C8.922472,8.7022038 9.0499134,8.6156693 9.1946621,8.5527344 C9.3394098,8.4898014 9.4967442,8.458334 9.666667,8.458334 z M2.4166667,8.458334 C2.5865884,8.458334 2.7439237,8.4898014 2.8886719,8.5527344 C3.0334201,8.6156693 3.1608615,8.7022038 3.2709961,8.8123379 C3.3811305,8.922472 3.4676647,9.0499134 3.5305991,9.1946621 C3.593533,9.3394108 3.625,9.4967461 3.625,9.666667 C3.625,9.8365898 3.593533,9.9939241 3.5305991,10.138672 C3.4676647,10.283421 3.3811305,10.410862 3.2709961,10.520996 C3.1608615,10.631131 3.0334201,10.717666 2.8886719,10.7806 C2.7439237,10.843534 2.5865884,10.875 2.4166667,10.875 C2.2467446,10.875 2.0894098,10.843534 1.9446615,10.7806 C1.7999132,10.717666 1.6724718,10.631131 1.5623373,10.520996 C1.4522028,10.410862 1.3656684,10.283421 1.3027343,10.138672 C1.2398003,9.9939241 1.2083333,9.8365898 1.2083334,9.666667 C1.2083333,9.4967461 1.2398003,9.3394108 1.3027343,9.1946621 C1.3656684,9.0499134 1.4522028,8.922472 1.5623373,8.8123379 C1.6724718,8.7022038 1.7999132,8.6156693 1.9446615,8.5527344 C2.0894098,8.4898014 2.2467446,8.458334 2.4166667,8.458334 z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" SnapsToDevicePixels="True"/>
                            </ContentControl>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IconInfo" TargetType="{x:Type Control}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ContentControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path Data="M7.75,6.4580002 L9.042,6.4580002 L9.042,12.916 L7.75,12.916 z M7.75,3.8750002 L9.042,3.8750002 L9.042,5.1670002 L7.75,5.1670002 z M8.3960004,1.8310547E-07 C7.62233,1.8310547E-07 6.8789337,0.10091428 6.1658125,0.30274058 C5.4526907,0.50456878 4.78498,0.78712521 4.1626803,1.1504137 C3.5403807,1.5137022 2.9735831,1.9509934 2.4622886,2.4622894 C1.9509936,2.9735853 1.5137019,3.5403824 1.1504136,4.1626806 C0.78712491,4.7849817 0.50456729,5.4543743 0.3027404,6.1708592 C0.10091351,6.8873451 0,7.6290591 0,8.3960011 C0,9.1629441 0.10091351,9.9046581 0.3027404,10.621143 C0.50456729,11.337629 0.78712491,12.007022 1.1504136,12.629321 C1.5137019,13.25162 1.9509936,13.818418 2.4622886,14.329713 C2.9735831,14.841007 3.5403807,15.278298 4.1626803,15.641587 C4.78498,16.004875 5.4526907,16.287433 6.1658125,16.48926 C6.8789337,16.691088 7.62233,16.792 8.3960004,16.792 C9.1629424,16.792 9.9046563,16.691088 10.621142,16.48926 C11.337627,16.287433 12.00702,16.004875 12.62932,15.641587 C13.251619,15.278298 13.818416,14.841007 14.329711,14.329713 C14.841006,13.818418 15.278297,13.25162 15.641586,12.629321 C16.004874,12.007022 16.287431,11.33931 16.489259,10.626188 C16.691085,9.9130668 16.791999,9.1696715 16.791999,8.3960011 C16.791999,7.6290591 16.691085,6.8873451 16.489259,6.1708592 C16.287431,5.4543743 16.004874,4.7849817 15.641586,4.1626806 C15.278297,3.5403824 14.841006,2.9735853 14.329711,2.4622894 C13.818416,1.9509934 13.251619,1.5137022 12.62932,1.1504137 C12.00702,0.78712521 11.337627,0.50456878 10.621142,0.30274058 C9.9046563,0.10091428 9.1629424,1.8310547E-07 8.3960004,1.8310547E-07 z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" SnapsToDevicePixels="True"/>
                            </ContentControl>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IconWarning" TargetType="{x:Type Control}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ContentControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path Data="M9.0625,12.1875 L9.0625,13.125 L10,13.125 L10,12.1875 z M9.0625,6.5625 L9.0625,11.25 L10,11.25 L10,6.5625 z M9.53125,0.9375 L16.5625,15 L2.5,15 z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" SnapsToDevicePixels="True"/>
                            </ContentControl>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IconError" TargetType="{x:Type Control}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ContentControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path Data="M8.4842758,7.0780001 L7.0780001,8.4842758 12.578099,14 7.0780001,19.515724 8.4842758,20.922001 14,15.421901 19.515724,20.922001 20.922001,19.515724 15.421901,14 20.922001,8.4842758 19.515724,7.0780001 14,12.578099 z M14,0 C15.291666,1.9073486E-06 16.533854,0.16666794 17.726563,0.50000018 18.91927,0.83333397 20.033854,1.3046875 21.070313,1.9140625 22.10677,2.5234375 23.049479,3.2526054 23.898438,4.1015625 24.747395,4.9505215 25.476563,5.8932304 26.085938,6.9296875 26.695313,7.9661465 27.166666,9.0807304 27.5,10.273438 27.833332,11.466146 27.999998,12.708334 28,14 27.999998,15.291668 27.833332,16.533855 27.5,17.726563 27.166666,18.919271 26.695313,20.033855&#xD;&#xA;26.085938,21.070313 25.476563,22.106771 24.747395,23.04948 23.898438,23.898438 23.049479,24.747396 22.10677,25.476563 21.070313,26.085938 20.033854,26.695313 18.91927,27.166666 17.726563,27.5 16.533854,27.833334 15.291666,28 14,28 12.708332,28 11.466145,27.833334 10.273438,27.5 9.0807285,27.166666 7.9661455,26.695313 6.9296875,26.085938 5.893229,25.476563 4.9505205,24.747396 4.1015625,23.898438 3.252604,23.04948&#xD;&#xA;2.5234375,22.106771 1.9140625,21.070313 1.3046875,20.033855 0.83333325,18.919271 0.50000018,17.726563 0.16666651,16.533855 0,15.291668 0,14 0,12.708334 0.16666651,11.466146 0.50000018,10.273438 0.83333325,9.0807304 1.3046875,7.9661465 1.9140625,6.9296875 2.5234375,5.8932304 3.252604,4.9505215 4.1015625,4.1015625 4.9505205,3.2526054 5.893229,2.5234375 6.9296875,1.9140625 7.9661455,1.3046875 9.0807285,0.83333397 10.273438,0.50000018&#xD;&#xA;11.466145,0.16666794 12.708332,1.9073486E-06 14,0 z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" SnapsToDevicePixels="True"/>
                            </ContentControl>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IconSettingsGeneral" TargetType="{x:Type Control}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ContentControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path Data="M8,5.9375 C7.713541,5.9375 7.445312,5.9908857 7.1953125,6.0976563 C6.945312,6.2044277 6.726562,6.3515625 6.5390625,6.5390625 C6.351562,6.7265625 6.2044268,6.9453125 6.0976563,7.1953125 C5.9908853,7.4453125 5.9375,7.713542 5.9375,8 C5.9375,8.286459 5.9908853,8.5546875 6.0976563,8.8046875 C6.2044268,9.0546875 6.351562,9.2734375 6.5390625,9.4609375 C6.726562,9.6484375 6.945312,9.7955732 7.1953125,9.9023438 C7.445312,10.009115 7.713541,10.0625 8,10.0625 C8.286458,10.0625 8.5546875,10.009115 8.8046875,9.9023438 C9.0546875,9.7955732 9.2734375,9.6484375 9.4609375,9.4609375 C9.6484375,9.2734375 9.7955723,9.0546875 9.9023438,8.8046875 C10.009114,8.5546875 10.0625,8.286459 10.0625,8 C10.0625,7.713542 10.009114,7.4453125 9.9023438,7.1953125 C9.7955723,6.9453125 9.6484375,6.7265625 9.4609375,6.5390625 C9.2734375,6.3515625 9.0546875,6.2044277 8.8046875,6.0976563 C8.5546875,5.9908857 8.286458,5.9375 8,5.9375 z M8,5.0625 C8.40625,5.0625 8.7877598,5.1393232 9.1445313,5.2929688 C9.5013018,5.4466152 9.8125,5.65625 10.078125,5.921875 C10.34375,6.1875 10.553385,6.4986982 10.707031,6.8554688 C10.860677,7.2122402 10.9375,7.59375 10.9375,8 C10.9375,8.40625 10.860677,8.7877607 10.707031,9.1445313 C10.553385,9.5013027 10.34375,9.8125 10.078125,10.078125 C9.8125,10.34375 9.5013018,10.553386 9.1445313,10.707031 C8.7877598,10.860678 8.40625,10.9375 8,10.9375 C7.59375,10.9375 7.2122393,10.860678 6.8554688,10.707031 C6.4986978,10.553386 6.1875,10.34375 5.921875,10.078125 C5.65625,9.8125 5.4466143,9.5013027 5.2929688,9.1445313 C5.1393228,8.7877607 5.0625,8.40625 5.0625,8 C5.0625,7.59375 5.1393228,7.2122402 5.2929688,6.8554688 C5.4466143,6.4986982 5.65625,6.1875 5.921875,5.921875 C6.1875,5.65625 6.4986978,5.4466152 6.8554688,5.2929688 C7.2122393,5.1393232 7.59375,5.0625 8,5.0625 z M6.109375,1.1406249 L4.484375,1.8125 L4.9765625,3.9296875 C4.7786455,4.0911465 4.596354,4.2565107 4.4296875,4.4257813 C4.2630205,4.5950527 4.096354,4.7786465 3.9296875,4.9765625 L1.8125,4.484375 L1.1406249,6.109375 L2.984375,7.265625 C2.9739583,7.390625 2.9635415,7.5143232 2.953125,7.6367188 C2.9427083,7.7591152 2.9375,7.8828125 2.9375,8.0078125 C2.9375,8.1276045 2.9427083,8.25 2.953125,8.375 C2.9635415,8.5 2.9739583,8.6223965 2.984375,8.7421875 L1.1406249,9.890625 L1.8125,11.515625 L3.9296875,11.023438 C4.0911455,11.221354 4.2565103,11.403646 4.4257813,11.570313 C4.5950518,11.736979 4.7786455,11.903646 4.9765625,12.070313 L4.484375,14.1875 L6.109375,14.859375 L7.265625,13.015625 C7.3854165,13.026042 7.5078125,13.036459 7.6328125,13.046875 C7.7578125,13.057292 7.880208,13.0625 8,13.0625 C8.125,13.0625 8.2486973,13.057292 8.3710938,13.046875 C8.4934893,13.036459 8.6171875,13.026042 8.7421875,13.015625 L9.890625,14.859375 L11.515625,14.1875 L11.023438,12.070313 C11.221354,11.908854 11.403646,11.74349 11.570313,11.574219 C11.736979,11.404948 11.903646,11.221354 12.070313,11.023438 L14.1875,11.515625 L14.859375,9.890625 L13.015625,8.734375 C13.026041,8.609375 13.036457,8.4856777 13.046875,8.3632813 C13.057291,8.2408857 13.0625,8.1171875 13.0625,7.9921875 C13.0625,7.8723965 13.057291,7.75 13.046875,7.625 C13.036457,7.5 13.026041,7.3776045 13.015625,7.2578125 L14.859375,6.109375 L14.1875,4.484375 L12.070313,4.9765625 C11.908854,4.7786465 11.743489,4.5963545 11.574219,4.4296875 C11.404947,4.2630215 11.221354,4.0963545 11.023438,3.9296875 L11.515625,1.8125 L9.890625,1.1406249 L8.734375,2.984375 C8.614583,2.973959 8.4921875,2.9635429 8.3671875,2.953125 C8.2421875,2.942709 8.119791,2.9375 8,2.9375 C7.875,2.9375 7.7513018,2.942709 7.6289063,2.953125 C7.5065103,2.9635429 7.3828125,2.973959 7.2578125,2.984375 z M6.4609375,0.046875 L7.71875,2.0703125 C7.765625,2.0703125 7.8125,2.0690107 7.859375,2.0664063 C7.90625,2.0638027 7.953125,2.0625 8,2.0625 C8.046875,2.0625 8.09375,2.0638027 8.140625,2.0664063 C8.1875,2.0690107 8.234375,2.0703125 8.28125,2.0703125 L9.5390625,0.046875 L12.53125,1.2890625 L12,3.609375 C12.135416,3.734375 12.265625,3.864584 12.390625,4 L14.710938,3.46875 L15.953125,6.4609375 L13.929688,7.71875 C13.929688,7.765625 13.930989,7.8125 13.933594,7.859375 C13.936197,7.90625 13.9375,7.953125 13.9375,8 C13.9375,8.046875 13.936197,8.09375 13.933594,8.140625 C13.930989,8.1875 13.929688,8.234375 13.929688,8.28125 L15.953125,9.5390625 L14.710938,12.53125 L12.390625,12 C12.265625,12.135417 12.135416,12.265625 12,12.390625 L12.53125,14.710938 L9.5390625,15.953125 L8.28125,13.929688 C8.234375,13.929688 8.1875,13.93099 8.140625,13.933594 C8.09375,13.936198 8.046875,13.9375 8,13.9375 C7.953125,13.9375 7.90625,13.936198 7.859375,13.933594 C7.8125,13.93099 7.765625,13.929688 7.71875,13.929688 L6.4609375,15.953125 L3.46875,14.710938 L4,12.390625 C3.864583,12.265625 3.7343748,12.135417 3.609375,12 L1.2890625,12.53125 L0.046875,9.5390625 L2.0703125,8.28125 C2.0703125,8.234375 2.0690103,8.1875 2.0664063,8.140625 C2.063802,8.09375 2.0625,8.046875 2.0625,8 C2.0625,7.953125 2.063802,7.90625 2.0664063,7.859375 C2.0690103,7.8125 2.0703125,7.765625 2.0703125,7.71875 L0.046875,6.4609375 L1.2890625,3.46875 L3.609375,4 C3.7343748,3.864584 3.864583,3.734375 4,3.609375 L3.46875,1.2890625 z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" SnapsToDevicePixels="True"/>
                            </ContentControl>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IconSettingsGraphics" TargetType="{x:Type Control}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ContentControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path Data="M11,7 L12,7 L12,8 L11,8 z M9,7 L10,7 L10,8 L9,8 z M7,7 L8,7 L8,8 L7,8 z M5,7 L6,7 L6,8 L5,8 z M3,7 L4,7 L4,8 L3,8 z M11,5 L12,5 L12,6 L11,6 z M9,5 L10,5 L10,6 L9,6 z M7,5 L8,5 L8,6 L7,6 z M5,5 L6,5 L6,6 L5,6 z M3,5 L4,5 L4,6 L3,6 z M0.99999994,3 L0.99999994,10 L14,10 L14,3 z M0,2 L15,2 L15,11 L8,11 L8,12 L10,12 L10,13 L5,13 L5,12 L7,12 L7,11 L0,11 z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" SnapsToDevicePixels="True"/>
                            </ContentControl>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IconSettingsMisc" TargetType="{x:Type Control}" BasedOn="{StaticResource IconEllipsis}"/>

            <Style x:Key="IconSettingsAdvanced" TargetType="{x:Type Control}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ContentControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path Data="M7,12 L8,12 L8,13 L7,13 z M7,6 L8,6 L8,11 L7,11 z M7.5,2.234375 L1.6171874,14 L13.382813,14 z M7.5,0 L15,15 L0,15 z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" SnapsToDevicePixels="True"/>
                            </ContentControl>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="GitHubLogoMark" TargetType="{x:Type Control}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ContentControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path RenderTransformOrigin="0.5,0.5" Data="F0 M 0,0 C -198.67,0 -359.68,161.03 -359.68,359.86 -359.68,518.81 -256.67,653.56 -113.75,701.14 -95.65,704.51 -89.08,693.29 -89.08,683.84 -89.08,675.35 -89.4,652.6 -89.56,622.63 -189.7,644.42 -210.84,574.41 -210.84,574.41 -227.19,532.75 -250.74,521.85 -250.74,521.85 -283.42,499.42 -248.33,499.9 -248.33,499.9 -212.13,502.47 -193.22,536.91 -193.22,536.91 -161.18,591.87 -108.95,576.01 -88.44,566.88 -85.23,543.64 -75.94,527.78 -65.69,518.81 -145.48,509.68 -229.59,478.75 -229.59,340.96 -229.59,301.7 -215.49,269.66 -192.42,244.5 -196.26,235.37 -208.6,198.84 -188.89,149.17 -188.89,149.17 -158.77,139.56 -90.04,186.18 -61.36,178.17 -30.6,174.16 0,174 30.6,174.16 61.36,178.17 90.04,186.18 158.77,139.56 188.89,149.17 188.89,149.17 208.6,198.84 196.26,235.37 192.42,244.5 215.49,269.66 229.43,301.7 229.43,340.96 229.43,479.23 145.32,509.52 65.21,518.49 78.19,529.54 89.56,551.49 89.56,585.14 89.56,633.21 89.24,671.98 89.24,683.84 89.24,693.45 95.65,704.67 113.91,701.14 256.83,653.4 359.68,518.65 359.68,359.86 359.68,161.03 198.67,0 0,0 z" Fill="#ff191717" Stretch="Uniform" SnapsToDevicePixels="True" />
                            </ContentControl>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ui:BooleanEqualityConverter x:Key="BooleanEqualityConverter"/>
            <ui:ResourceStringConverter x:Key="ResourceStringConverter"/>
            <ui:RegionInstalledConverter x:Key="RegionInstalledConverter"/>
            <ui:DimensionConverter x:Key="DimensionConverter"/>

            <Style TargetType="{x:Type Label}">
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TextBoxBase}">
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="{StaticResource ChromeDisabledLow}"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Padding" Value="10,3,6,5"/>
                <Setter Property="MinHeight" Value="32"/>
                <Setter Property="SelectionBrush" Value="{StaticResource WindowerBranding}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <Border x:Name="Background" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Opacity="0.4" Grid.Row="1" Grid.RowSpan="1"/>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="1">
                                    <ScrollViewer x:Name="PART_ContentHost" Focusable="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Padding="{TemplateBinding Padding}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource ChromeAltLow}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="Background" Value="1"/>
                                    <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                                    <Setter Property="Background" Value="{StaticResource BaseLow}"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid IsHitTestVisible="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="2*"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <AdornedElementPlaceholder Grid.RowSpan="3"/>
                                <Control Style="{StaticResource IconError}" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Grid.Row="1" Foreground="{StaticResource BaseError}" HorizontalAlignment="Right"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}"/>

            <Style TargetType="{x:Type xtk:WatermarkTextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}"/>

            <Style TargetType="{x:Type PasswordBox}">
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="{StaticResource ChromeDisabledLow}"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Padding" Value="10,3,6,5"/>
                <Setter Property="MinHeight" Value="32"/>
                <Setter Property="SelectionBrush" Value="{StaticResource WindowerBranding}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Grid>
                                <Border x:Name="Background" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Opacity="0.4" Grid.Row="1" Grid.RowSpan="1"/>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="1">
                                    <ScrollViewer x:Name="PART_ContentHost" Focusable="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Padding="{TemplateBinding Padding}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource ChromeAltLow}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="Background" Value="1"/>
                                    <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                                    <Setter Property="Background" Value="{StaticResource BaseLow}"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid IsHitTestVisible="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="2*"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <AdornedElementPlaceholder Grid.RowSpan="3"/>
                                <Control Style="{StaticResource IconError}" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Grid.Row="1" Foreground="{StaticResource BaseError}" HorizontalAlignment="Right"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type xtk:IntegerUpDown}">
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="{StaticResource ChromeDisabledLow}"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="10,3,6,5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type xtk:IntegerUpDown}">
                            <xtk:ButtonSpinner x:Name="PART_Spinner" AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}" ButtonSpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch" IsTabStop="False" ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Stretch" Padding="0">
                                <xtk:ButtonSpinner.Template>
                                    <ControlTemplate TargetType="{x:Type xtk:ButtonSpinner}">
                                        <ControlTemplate.Resources>
                                            <Style x:Key="ButtonStyle" TargetType="{x:Type RepeatButton}">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Grid>
                                                                <Rectangle x:Name="Background" Fill="{StaticResource WindowerBranding}" Margin="2,0,0,0"/>
                                                                <ContentPresenter Margin="7,5,5,5"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Opacity" TargetName="Background" Value="0.7"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{StaticResource BaseLow}"/>
                                                                    <Setter Property="Fill" TargetName="Background" Value="{StaticResource BaseMediumLow}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ControlTemplate.Resources>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Content="{TemplateBinding Content}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            <RepeatButton x:Name="PART_IncreaseButton" IsTabStop="{TemplateBinding IsTabStop}" Grid.Column="2" Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Style="{StaticResource ButtonStyle}">
                                                <Grid VerticalAlignment="Stretch" SnapsToDevicePixels="True">
                                                    <Path Data="M10,0 L12,0 12,10 22,10 22,12 12,12 12,22 10,22 10,12 0,12 0,10 10,10 z" Fill="{Binding Foreground, ElementName=PART_IncreaseButton}" Margin="0" Stretch="Uniform" UseLayoutRounding="True"/>
                                                </Grid>
                                            </RepeatButton>
                                            <RepeatButton x:Name="PART_DecreaseButton" IsTabStop="{TemplateBinding IsTabStop}" Grid.Column="1" Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Style="{StaticResource ButtonStyle}">
                                                <Grid VerticalAlignment="Stretch" SnapsToDevicePixels="True" Margin="0">
                                                    <Path Data="M0,0 L22,0 L22,2 L0,2 z" Fill="{Binding Foreground, ElementName=PART_DecreaseButton}" Height="2" Margin="0" Stretch="Uniform" UseLayoutRounding="True"/>
                                                </Grid>
                                            </RepeatButton>
                                        </Grid>
                                    </ControlTemplate>
                                </xtk:ButtonSpinner.Template>
                                <xtk:WatermarkTextBox x:Name="PART_TextBox" AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}" AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}" AcceptsReturn="False" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" ContextMenu="{TemplateBinding ContextMenu}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="{TemplateBinding IsTabStop}" IsUndoEnabled="True" Padding="{TemplateBinding Padding}" TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}" TextWrapping="NoWrap" TabIndex="{TemplateBinding TabIndex}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}" Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </xtk:ButtonSpinner>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource ChromeAltLow}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" TargetName="PART_TextBox" Value="{StaticResource BaseMediumLow}"/>
                                    <Setter Property="Background" TargetName="PART_TextBox" Value="{StaticResource BaseLow}"/>
                                    <Setter Property="BorderBrush" TargetName="PART_TextBox" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource BaseLow}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderThickness" Value="2,2,2,2"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Padding" Value="8,4,8,4"/>
                <Setter Property="MinHeight" Value="32"/>
                <Setter Property="MinWidth" Value="96"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" RenderTransformOrigin="0.5,0.5">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                                    <ContentPresenter Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource BaseLow}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource BaseMedium}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource BaseMediumLow}"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="{StaticResource BaseLow}"/>
                                    <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{StaticResource BaseMediumHigh}"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Padding" Value="8,5,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid Background="Transparent" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Height="32" VerticalAlignment="Top">
                                    <Border x:Name="Box" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="20" Width="20"/>
                                    <TextBlock x:Name="Check" Visibility="Collapsed" Foreground="White" Text="&#xE001;" FontFamily="Segoe MDL2 Assets" FontSize="20" Width="20" Height="20"/>
                                </Grid>
                                <ContentPresenter Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource BaseMedium}"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="2"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource BaseMediumLow}"/>
                                    <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="{StaticResource WindowerBranding}"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Visibility" TargetName="Check" Value="Visible"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource WindowerBranding}"/>
                                    <Setter Property="BorderThickness" Value="2"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="Visibility" TargetName="Check" Value="Visible"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="True"/>
                                        <Condition Property="IsPressed" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource BaseMedium}"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Visibility" TargetName="Check" Value="Visible"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="True"/>
                                        <Condition Property="IsEnabled" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="2"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource BaseMediumLow}"/>
                                    <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                                    <Setter Property="Foreground" TargetName="Check" Value="{StaticResource BaseMediumLow}"/>
                                    <Setter Property="Visibility" TargetName="Check" Value="Visible"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ToggleSwitch" TargetType="{x:Type CheckBox}">
                <Style.Resources>
                    <sys:String x:Key="ToggleSwitchOffText">Off</sys:String>
                    <sys:String x:Key="ToggleSwitchOnText">On</sys:String>
                </Style.Resources>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label x:Name="Label" Grid.ColumnSpan="2" IsHitTestVisible="False" Content="{TemplateBinding Content}"/>
                                <ToggleButton Margin="0,4,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Row="1" IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}}" FocusVisualStyle="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" MinHeight="20">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Grid Background="Transparent">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition GeneratedDuration="0" To="Checked">
                                                                <Storyboard>
                                                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Knob">
                                                                        <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="28,5,0,0">
                                                                            <EasingThicknessKeyFrame.EasingFunction>
                                                                                <CubicEase EasingMode="EaseOut"/>
                                                                            </EasingThicknessKeyFrame.EasingFunction>
                                                                        </EasingThicknessKeyFrame>
                                                                    </ThicknessAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualTransition>
                                                            <VisualTransition GeneratedDuration="0" To="Unchecked">
                                                                <Storyboard>
                                                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Knob">
                                                                        <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="5,5,0,0">
                                                                            <EasingThicknessKeyFrame.EasingFunction>
                                                                                <CubicEase EasingMode="EaseOut"/>
                                                                            </EasingThicknessKeyFrame.EasingFunction>
                                                                        </EasingThicknessKeyFrame>
                                                                    </ThicknessAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualTransition>
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Knob">
                                                                    <EasingThicknessKeyFrame KeyTime="0" Value="28,5,0,0"/>
                                                                </ThicknessAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unchecked"/>
                                                        <VisualState x:Name="Indeterminate"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="12"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Rectangle x:Name="SwitchOff" Grid.ColumnSpan="1" Fill="Transparent" Margin="0" Width="44" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" RadiusX="10" RadiusY="10" StrokeThickness="2" Visibility="Visible" Stroke="Black" SnapsToDevicePixels="True"/>
                                                <Rectangle x:Name="SwitchOn" Grid.ColumnSpan="1" Fill="{StaticResource WindowerBranding}" Margin="0" Width="44" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" RadiusX="10" RadiusY="10" StrokeThickness="0" Visibility="Collapsed" SnapsToDevicePixels="True"/>
                                                <Ellipse x:Name="Knob" Grid.ColumnSpan="1" Fill="Black" Height="10" Margin="5,5,0,0" VerticalAlignment="Top" Width="10" HorizontalAlignment="Left" StrokeThickness="0"/>
                                                <TextBlock x:Name="SwitchOffText" Text="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource ResourceStringConverter}, ConverterParameter={}{0}}" Tag="{DynamicResource ToggleSwitchOffText}" Grid.Column="2" FontSize="15" Height="Auto"/>
                                                <TextBlock x:Name="SwitchOnText" Text="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource ResourceStringConverter}, ConverterParameter={}{0}}" Tag="{DynamicResource ToggleSwitchOnText}" Grid.Column="2" FontSize="15" Visibility="Hidden" Height="Auto"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Opacity" TargetName="SwitchOn" Value="0.7"/>
                                                    <Setter Property="VerticalAlignment" TargetName="SwitchOffText" Value="Top"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Fill" TargetName="Knob" Value="{StaticResource BaseLow}"/>
                                                    <Setter Property="Foreground" TargetName="SwitchOffText" Value="{StaticResource BaseMediumLow}"/>
                                                    <Setter Property="Foreground" TargetName="SwitchOnText" Value="{StaticResource BaseMediumLow}"/>
                                                    <Setter Property="Visibility" TargetName="SwitchOff" Value="Collapsed"/>
                                                    <Setter Property="Visibility" TargetName="SwitchOn" Value="Visible"/>
                                                    <Setter Property="Fill" TargetName="SwitchOn" Value="{StaticResource BaseMediumLow}"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Visibility" TargetName="SwitchOnText" Value="Visible"/>
                                                    <Setter Property="Visibility" TargetName="SwitchOffText" Value="Hidden"/>
                                                    <Setter Property="Fill" TargetName="Knob" Value="White"/>
                                                    <Setter Property="Visibility" TargetName="SwitchOff" Value="Collapsed"/>
                                                    <Setter Property="Visibility" TargetName="SwitchOn" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Fill" TargetName="Knob" Value="White"/>
                                                    <Setter Property="Visibility" TargetName="SwitchOn" Value="Visible"/>
                                                    <Setter Property="Opacity" TargetName="SwitchOn" Value="1"/>
                                                    <Setter Property="Fill" TargetName="SwitchOn" Value="{StaticResource BaseMedium}"/>
                                                    <Setter Property="Visibility" TargetName="SwitchOff" Value="Collapsed"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" TargetName="Label" Value="{StaticResource BaseMediumLow}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="YesNoToggleSwitch"  TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ToggleSwitch}">
                <Style.Resources>
                    <sys:String x:Key="ToggleSwitchOffText">No</sys:String>
                    <sys:String x:Key="ToggleSwitchOnText">Yes</sys:String>
                </Style.Resources>
            </Style>

            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderBrush" Value="{StaticResource BaseMediumHigh}"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Padding" Value="8,0,0,0"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid VerticalAlignment="Top">
                                    <Ellipse x:Name="Ellipse" Height="20" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" UseLayoutRounding="False" Width="20"/>
                                    <Ellipse x:Name="Check" Fill="{TemplateBinding BorderBrush}" Opacity="0" Height="10" UseLayoutRounding="False" Width="10"/>
                                </Grid>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Stroke" TargetName="Ellipse" Value="Black"/>
                                    <Setter Property="Fill" TargetName="Check" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource WindowerBranding}"/>
                                    <Setter Property="Opacity" TargetName="Check" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource BaseMedium}"/>
                                    <Setter Property="Fill" TargetName="Check" Value="{StaticResource BaseMedium}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                                    <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource BaseMediumLow}"/>
                                    <Setter Property="Fill" TargetName="Check" Value="{StaticResource BaseMediumLow}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Slider}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Grid MinHeight="24" Background="Transparent">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTickBar" Height="4" HorizontalAlignment="Stretch" Placement="Top" Fill="{StaticResource BaseMediumLow}" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Margin="0,0,0,5" Visibility="Collapsed"/>
                                <TickBar x:Name="BottomTickBar" Height="4" HorizontalAlignment="Stretch" Placement="Bottom" Fill="{StaticResource BaseMediumLow}" SnapsToDevicePixels="True" VerticalAlignment="Top" Margin="0,5,0,0" Grid.Row="1" Visibility="Collapsed"/>
                                <Track x:Name="PART_Track" Grid.RowSpan="2">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="DecreaseRepeatButton" Command="Slider.DecreaseLarge" KeyboardNavigation.IsTabStop="False" Background="{StaticResource WindowerBranding}">
                                            <RepeatButton.Template>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Rectangle Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" VerticalAlignment="Center" Height="2"/>
                                                </ControlTemplate>
                                            </RepeatButton.Template>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Width="8" x:Name="Thumb" Background="{StaticResource WindowerBranding}">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Rectangle Width="8" Fill="{TemplateBinding Background}" RadiusX="4" RadiusY="4" SnapsToDevicePixels="True"/>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="IncreaseRepeatButton" Command="Slider.IncreaseLarge" Background="{StaticResource BaseMediumLow}" KeyboardNavigation.IsTabStop="False">
                                            <RepeatButton.Template>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Rectangle Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" VerticalAlignment="Center" Height="2"/>
                                                </ControlTemplate>
                                            </RepeatButton.Template>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="Thumb" Value="{StaticResource ChromeDisabledHigh}"/>
                                    <Setter Property="Background" TargetName="DecreaseRepeatButton" Value="{StaticResource ChromeDisabledHigh}"/>
                                    <Setter Property="Background" TargetName="IncreaseRepeatButton" Value="{StaticResource ChromeDisabledHigh}"/>
                                    <Setter Property="Fill" TargetName="TopTickBar" Value="{StaticResource ChromeDisabledHigh}"/>
                                    <Setter Property="Fill" TargetName="BottomTickBar" Value="{StaticResource ChromeDisabledHigh}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Thumb" Value="{StaticResource ChromeAltLow}"/>
                                    <Setter Property="Background" TargetName="IncreaseRepeatButton" Value="{StaticResource BaseMedium}"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter Property="Visibility" TargetName="BottomTickBar" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter Property="Visibility" TargetName="TopTickBar" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter Property="Visibility" TargetName="BottomTickBar" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="TopTickBar" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ScrollViewer}">
                <!--<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="2"/>
                                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Width="12" Background="Transparent" BorderThickness="0"/>
                                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Width="12" Background="Transparent" BorderThickness="0"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource ChromeHigh}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Width" Value="12"/>
                <Setter Property="MinWidth" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}">
                                            <RepeatButton.Template>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Grid Background="Transparent"/>
                                                </ControlTemplate>
                                            </RepeatButton.Template>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}">
                                            <RepeatButton.Template>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Grid Background="Transparent"/>
                                                </ControlTemplate>
                                            </RepeatButton.Template>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Background="{TemplateBinding Foreground}">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Padding="2" Background="Transparent">
                                                        <Grid Background="{TemplateBinding Background}"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="MinWidth" Value="0"/>
                        <Setter Property="Height" Value="12"/>
                        <Setter Property="MinHeight" Value="12"/>
                        <Setter Property="BorderThickness" Value="0,1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid SnapsToDevicePixels="true">
                                        <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}">
                                                    <RepeatButton.Template>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Grid Background="Transparent"/>
                                                        </ControlTemplate>
                                                    </RepeatButton.Template>
                                                </RepeatButton>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}">
                                                    <RepeatButton.Template>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Grid Background="Transparent"/>
                                                        </ControlTemplate>
                                                    </RepeatButton.Template>
                                                </RepeatButton>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Background="{TemplateBinding Foreground}">
                                                    <Thumb.Template>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Padding="2" Background="Transparent">
                                                                <Grid Background="{TemplateBinding Background}"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Thumb.Template>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Foreground" Value="{StaticResource ChromeAltLow}"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="Border" Width="80" Height="60" BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Padding="0,2">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource WindowerBranding}"/>
                                    <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource WindowerBranding}"/>
                                    <Setter Property="Padding" TargetName="Border" Value="0,2,0,0"/>
                                    <Setter Property="BorderThickness" TargetName="Border" Value="0,0,0,2"/>
                                </Trigger>
                                <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Border" Value="{StaticResource ListLow}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TabControl}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Background="{StaticResource ChromeMedium}">
                                    <TabPanel Background="Transparent" IsItemsHost="True" Margin="24,0,0,0" KeyboardNavigation.TabIndex="1" HorizontalAlignment="Left"/>
                                </Border>
                                <ui:TransitionControl x:Name="PART_SelectedContentHost" AutoTransitionDirection="Horizontal" Content="{TemplateBinding SelectedContent}" AutoTransitionIndex="{TemplateBinding SelectedIndex}" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Row="1"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
                <Grid SnapsToDevicePixels="True">
                    <Popup x:Name="PART_Popup" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="Slide"  Placement="Bottom" Width="{TemplateBinding ActualWidth}">
                        <Border Background="{StaticResource ChromeMediumLow}">
                            <Border BorderBrush="{StaticResource ChromeHigh}" BorderThickness="1">
                                <ScrollViewer>
                                    <Grid>
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,7,0,7"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Border>
                    </Popup>
                    <ToggleButton BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="{StaticResource ListMedium}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource BaseMediumLow}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Grid Margin="{TemplateBinding BorderThickness}" Height="28">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Path Grid.Column="1" Data="M0.63867193,2.7363281 L6,8.0976563 L11.361328,2.7363281 L11.888672,3.2636719 L6,9.1523438 L0.11132813,3.2636719 z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Height="12" Margin="8" RenderTransformOrigin="0.5,0.5" Stretch="None" VerticalAlignment="Center" Width="12"/>
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="true"/>
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}"/>

            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="Padding" Value="10,3,0,5"/>
                <Setter Property="MinWidth" Value="64"/>
                <Setter Property="MinHeight" Value="32"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="{StaticResource AltMediumLow}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BaseMediumLow}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
                <Style.Triggers>
                    <Trigger Property="IsEditable" Value="True">
                        <Setter Property="IsTabStop" Value="False"/>
                        <Setter Property="Padding" Value="2"/>
                        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource AltMedium}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BaseMedium}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{StaticResource BaseLow}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BaseLow}"/>
                        <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="11,5,11,7"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="MinHeight" Value="32"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource ListLow}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource ListAccentLow}"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="True"/>
                            <Condition Property="IsMouseOver" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource ListAccentLow}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="{StaticResource ChromeMediumLow}"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Padding" Value="0,12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="12,11,12,13"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                                        <Border RenderOptions.ClearTypeHint="Enabled">
                                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </Border>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource ListLow}"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource ListAccentLow}"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True"/>
                            <Condition Property="IsSelected" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource ListAccentMedium}"/>
                    </MultiTrigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type ProgressBar}">
                <Setter Property="Foreground" Value="{StaticResource WindowerBranding}"/>
                <Setter Property="Background" Value="{StaticResource BaseLow}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Border x:Name="PART_Track" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Determinate"/>
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Dot1">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-150"/>
                                                    <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.2" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2.3" Value="0"/>
                                                    <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.5" Value="150"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Dot2">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-150"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-150"/>
                                                    <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.4" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0"/>
                                                    <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.7" Value="150"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Dot3">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-150"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-150"/>
                                                    <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.6" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2.7" Value="0"/>
                                                    <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.9" Value="150"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Dot4">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-150"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-150"/>
                                                    <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.8" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2.9" Value="0"/>
                                                    <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:4.1" Value="150"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Dot5">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-150"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="-150"/>
                                                    <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:2" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:3.1" Value="0"/>
                                                    <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:4.3" Value="150"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Dots">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:4.3" Value="348"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                                    <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" d:IsHidden="True"/>
                                    <Grid x:Name="Dots" HorizontalAlignment="Left" Margin="-20,0,0,0" RenderTransformOrigin="0.5,0.5">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Ellipse x:Name="Dot1" Width="4" Height="4" Fill="{TemplateBinding Foreground}" Margin="2,0" Grid.Column="4" RenderTransformOrigin="0.5,0.5">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse x:Name="Dot2" Width="4" Height="4" Fill="{TemplateBinding Foreground}" Margin="2,0" Grid.Column="3" RenderTransformOrigin="0.5,0.5">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse x:Name="Dot3" Width="4" Height="4" Fill="{TemplateBinding Foreground}" Margin="2,0" Grid.Column="2" RenderTransformOrigin="0.5,0.5">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse x:Name="Dot4" Width="4" Height="4" Fill="{TemplateBinding Foreground}" Margin="2,0" Grid.Column="1" RenderTransformOrigin="0.5,0.5">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse x:Name="Dot5" Width="4" Height="4" Fill="{TemplateBinding Foreground}" Margin="2,0" Grid.Column="0" RenderTransformOrigin="0.5,0.5">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsIndeterminate" Value="True">
                                    <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsIndeterminate" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type ui:TransitionControl}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ui:TransitionControl}">
                            <Border>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="PresentationStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_PreviousContentHost" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="SlideLeft">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_CurrentContentHost" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_CurrentContentHost" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="40">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_PreviousContentHost" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="SlideRight">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_CurrentContentHost" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_CurrentContentHost" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-40">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_PreviousContentHost" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="SlideUp">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_CurrentContentHost" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_CurrentContentHost" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="30">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_PreviousContentHost" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="SlideDown">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_CurrentContentHost" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_CurrentContentHost" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-40">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_PreviousContentHost" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="CrossDisolve">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_CurrentContentHost" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="PART_PreviousContentHost" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid>
                                    <ContentPresenter x:Name="PART_PreviousContentHost" IsHitTestVisible="False">
                                        <ContentPresenter.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                    <ContentPresenter x:Name="PART_CurrentContentHost">
                                        <ContentPresenter.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="com:DesignerProperties.IsInDesignMode" Value="True">
                                    <Setter Property="Visibility" TargetName="PART_PreviousContentHost" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Hyperlink}">
                <Setter Property="Foreground" Value="{StaticResource ListAccentMedium}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource WindowerBranding}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type ContextMenu}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                <Setter Property="HasDropShadow" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <ControlTemplate.Resources>
                                <Style TargetType="{x:Type MenuItem}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="Height" Value="Auto"/>
                                    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                                <Border Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="Enabled">
                                                    <ContentPresenter Content="{TemplateBinding Header}" Margin="11,5,11,7" TextBlock.FontSize="15"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource ListLow}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource ListMedium}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ControlTemplate.Resources>
                            <Border Background="{StaticResource ChromeMediumLow}">
                                <Border BorderBrush="{StaticResource ChromeHigh}" BorderThickness="1">
                                    <Grid>
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,7,0,7"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Page" TargetType="{x:Type Page}">
                <Setter Property="Background" Value="Transparent"/>
                <Style.Triggers>
                    <Trigger Property="com:DesignerProperties.IsInDesignMode" Value="True">
                        <Setter Property="Background" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Storyboard x:Key="FadeIn">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="FadeOut">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </ResourceDictionary>
    </Application.Resources>
</Application>
