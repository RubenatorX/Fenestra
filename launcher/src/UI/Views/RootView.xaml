<!--
Copyright Â© Windower Dev Team

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation files
(the "Software"),to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge,
publish, distribute, sublicense, and/or sell copies of the Software,
and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->
<Window x:Class="Windower.UI.Views.RootView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ui="clr-namespace:Windower.UI"
        Title="{DynamicResource ProductName}"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        Width="370" Height="605"
        Icon="{Binding Source, Source={StaticResource Icon}, Mode=OneTime}">
    <Window.Template>
        <ControlTemplate TargetType="{x:Type Window}">
            <Grid>
                <Border Background="White" BorderThickness="0" SnapsToDevicePixels="True" RenderOptions.ClearTypeHint="Enabled">
                    <Border BorderBrush="{StaticResource WindowerBranding}" BorderThickness="1" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Background="{StaticResource WindowerBranding}" MouseDown="HandleWindowDrag">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock FontSize="12" Foreground="White" TextAlignment="Center" Text="{TemplateBinding Title}" Margin="7,7,7,8" Height="16" Grid.ColumnSpan="3"/>
                                    <Button Height="31" Width="46" Grid.Column="2" Click="HandleCloseButtonClick" ToolTip="{StaticResource Strings.Close}" IsTabStop="False">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                                <Setter Property="MinWidth" Value="0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border Background="{TemplateBinding Background}">
                                                                <Path Data="M0,0 L9,9 M0,9 L9,0" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Width="10" Height="10" Stretch="Uniform" Margin="18,10,18,11" SnapsToDevicePixels="True"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#FFE81123"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" Value="#FFF1707A"/>
                                                        <Setter Property="Foreground" Value="Black"/>
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding Interruptible}" Value="False">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button Height="31" Width="46" Grid.Column="1" Click="HandleMinimizeButtonClick" ToolTip="{StaticResource Strings.Minimize}" IsTabStop="False">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                                <Setter Property="MinWidth" Value="0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border Background="{TemplateBinding Background}">
                                                                <Path Data="M0,5 L9,5" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Width="10" Height="1" Stretch="Uniform" Margin="18,14,18,16" SnapsToDevicePixels="True"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#33FFFFFF"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" Value="#66FFFFFF"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </Border>
                            <AdornerDecorator Grid.Row="1">
                                <ui:TransitionControl Content="{TemplateBinding Content}"/>
                            </AdornerDecorator>
                        </Grid>
                    </Border>
                </Border>
            </Grid>
        </ControlTemplate>
    </Window.Template>
    <Binding Path="CurrentView"/>
</Window>
