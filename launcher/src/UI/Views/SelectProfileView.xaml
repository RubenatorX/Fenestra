<!--
Copyright Â© Windower Dev Team

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation files
(the "Software"),to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge,
publish, distribute, sublicense, and/or sell copies of the Software,
and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->
<Page x:Class="Windower.UI.Views.SelectProfileView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:ui="clr-namespace:Windower.UI"
      mc:Ignorable="d" d:DesignWidth="368" d:DesignHeight="560"
      Style="{StaticResource Page}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <ListBox ItemsSource="{Binding Profiles}" SelectedItem="{Binding SelectedProfile}" Grid.Row="1" Background="{x:Null}">
            <ListBox.Resources>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="12,11,12,13"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <Border.InputBindings>
                                        <MouseBinding Gesture="LeftDoubleClick" Command="{Binding DataContext.Launch, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Border.InputBindings>
                                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ListLow}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource ListAccentLow}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ListAccentMedium}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Resources>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{StaticResource Strings.Launch}" Command="{Binding Launch}" CommandParameter="{Binding SelectedProfile}"/>
                    <MenuItem Header="{StaticResource Strings.CopyProfile}" Command="{Binding CreateProfile}" CommandParameter="{Binding SelectedProfile}"/>
                    <MenuItem Header="{StaticResource Strings.CreateProfileLink}" Command="{Binding CreateProfileLink}" CommandParameter="{Binding SelectedProfile}"/>
                </ContextMenu>
            </ListBox.ContextMenu>
        </ListBox>
        <Canvas Height="48">
            <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}" Background="{StaticResource ChromeMedium}">
                <Grid.Resources>
                    <Style TargetType="{x:Type Menu}">
                        <Setter Property="HorizontalContentAlignment" Value="Right"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Menu}">
                                    <ItemsPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <ControlTemplate x:Key="AppBarButton" TargetType="{x:Type MenuItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Expand">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Label">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Label">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Label">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Collapse">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Label">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Label">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Label">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.7" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border Background="{TemplateBinding Background}">
                            <Grid MinHeight="48">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ContentPresenter Content="{TemplateBinding Icon}" HorizontalAlignment="Center" Margin="8,14,8,0"/>
                                <ContentPresenter x:Name="Label" Content="{TemplateBinding Header}" Grid.Row="1" Margin="8,4,8,6" Visibility="Collapsed">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="TextWrapping" Value="Wrap"/>
                                            <Setter Property="LineHeight" Value="18"/>
                                        </Style>
                                    </ContentPresenter.Resources>
                                    <ContentPresenter.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag">
                                <Trigger.Value>
                                    <sys:Boolean>True</sys:Boolean>
                                </Trigger.Value>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Expand}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource Collapse}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource ListLow}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource ListMedium}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <ControlTemplate x:Key="AppBarSeeMoreButton" TargetType="{x:Type MenuItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Expand">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Label">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Label">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Label">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Collapse">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Label">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Label">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Label">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.7" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border Background="{TemplateBinding Background}">
                            <Grid MinHeight="48">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ContentPresenter Content="{TemplateBinding Icon}" HorizontalAlignment="Center" Margin="8,14,8,0"/>
                                <ContentPresenter x:Name="Label" Content="{TemplateBinding Header}" Grid.Row="1" Margin="8,4,8,6" Visibility="Collapsed">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="TextWrapping" Value="Wrap"/>
                                            <Setter Property="LineHeight" Value="18"/>
                                        </Style>
                                    </ContentPresenter.Resources>
                                    <ContentPresenter.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                                <Popup x:Name="PART_Popup" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Left" VerticalOffset="{TemplateBinding ActualHeight}" HorizontalOffset="{TemplateBinding ActualWidth}">
                                    <Border BorderBrush="{StaticResource ChromeHigh}" BorderThickness="1" Background="{StaticResource ChromeMediumLow}">
                                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" Margin="0,7,0,7"/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag">
                                <Trigger.Value>
                                    <sys:Boolean>True</sys:Boolean>
                                </Trigger.Value>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Expand}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource Collapse}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource ListLow}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource ListMedium}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <ControlTemplate x:Key="AppBarOverflowButton" TargetType="{x:Type MenuItem}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Header}" Margin="11,5,11,7" TextBlock.FontSize="15"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource ListLow}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource ListMedium}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource BaseMediumLow}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="Width" Value="68"/>
                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
                        <Setter Property="Tag" Value="{Binding IsSubmenuOpen, ElementName=SeeMore}"/>
                        <Style.Triggers>
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Template" Value="{StaticResource AppBarButton}"/>
                            </Trigger>
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Template" Value="{StaticResource AppBarSeeMoreButton}"/>
                            </Trigger>
                            <Trigger Property="Role" Value="SubMenuItem">
                                <Setter Property="Width" Value="Auto"/>
                                <Setter Property="MinWidth" Value="140"/>
                                <Setter Property="Template" Value="{StaticResource AppBarOverflowButton}"/>
                            </Trigger>
                            <Trigger Property="Role" Value="SubMenuHeader">
                                <Setter Property="Width" Value="Auto"/>
                                <Setter Property="MinWidth" Value="140"/>
                                <Setter Property="Template" Value="{StaticResource AppBarOverflowButton}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Menu>
                    <MenuItem Header="{StaticResource Strings.RemoveProfile}" ToolTip="{StaticResource Strings.RemoveProfile}" Command="{Binding DeleteProfile}" CommandParameter="{Binding SelectedProfile}">
                        <MenuItem.Icon>
                            <Control Style="{StaticResource IconRemove}" Width="20" Height="20"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{StaticResource Strings.EditProfile}" ToolTip="{StaticResource Strings.EditProfile}" Command="{Binding EditProfile}" CommandParameter="{Binding SelectedProfile}">
                        <MenuItem.Icon>
                            <Control Style="{StaticResource IconEdit}" Width="20" Height="20"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{StaticResource Strings.CreateProfile}" ToolTip="{StaticResource Strings.CreateProfile}" Command="{Binding CreateProfile}">
                        <MenuItem.Icon>
                            <Control Style="{StaticResource IconAdd}" Width="20" Height="20"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{StaticResource Strings.Launch}" ToolTip="{StaticResource Strings.Launch}" Command="{Binding Launch}" CommandParameter="{Binding SelectedProfile}">
                        <MenuItem.Icon>
                            <Grid>
                                <Control Style="{StaticResource IconLaunch}" Width="20" Height="20"/>
                                <Image Source="{x:Static ui:StockIcons.Shield}" Width="10" Height="10" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsElevationRequired}" Value="True"/>
                                                        <Condition Binding="{Binding IsAdministrator}" Value="False"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Grid>
                        </MenuItem.Icon>
                    </MenuItem>
                </Menu>
                <Menu Grid.Column="1">
                    <MenuItem x:Name="SeeMore" ToolTip="{StaticResource Strings.SeeMore}" Width="48">
                        <MenuItem.Icon>
                            <Control Style="{StaticResource IconEllipsis}" Width="20" Height="20"/>
                        </MenuItem.Icon>
                        <MenuItem Header="{StaticResource Strings.About}" Command="{Binding OpenAboutPage}"/>
                        <MenuItem Header="{StaticResource Strings.ReportBug}" d:LayoutOverrides="Width" Command="{Binding OpenWebpage}" CommandParameter="https://github.com/windower/windower/issues"/>
                    </MenuItem>
                </Menu>
            </Grid>
        </Canvas>
    </Grid>
</Page>
